import { newAuthenticatedClient } from './client'
import type { components } from '../generated' // generated by openapi-typescript
import { ApiResponse, fromClientResponse, toExn } from '../response'

export type SkuGetStockLevelsInput = components['schemas']['QueryBatchStockBySkuRequest']
export type SkuGetStockLevelsResponse = components['schemas']['BatchStockResponse']

export async function skuGetStockLevels(
  client: ReturnType<typeof newAuthenticatedClient>,
  input: SkuGetStockLevelsInput
): Promise<ApiResponse<SkuGetStockLevelsResponse>> {
  const response = await client.POST('/v1/sku/stocklevels', {
    body: input,
  })
  return fromClientResponse(response)
}

export async function skuGetStockLevelsExn(
  client: ReturnType<typeof newAuthenticatedClient>,
  input: SkuGetStockLevelsInput
): Promise<SkuGetStockLevelsResponse> {
  const response = await skuGetStockLevels(client, input)
  return toExn(response)
}

export type SkuGetDetailsInput = components['schemas']['QueryProductDetailsBySkuRequest']
export type SkuGetDetailsResponse = components['schemas']['SkuProductDetails']

export async function skuGetDetails(
  client: ReturnType<typeof newAuthenticatedClient>,
  input: SkuGetDetailsInput
): Promise<ApiResponse<SkuGetDetailsResponse>> {
  const response = await client.POST('/v1/sku/details', {
    body: input,
  })
  return fromClientResponse(response)
}

export async function skuGetDetailsExn(
  client: ReturnType<typeof newAuthenticatedClient>,
  input: SkuGetDetailsInput
): Promise<SkuGetDetailsResponse> {
  const response = await skuGetDetails(client, input)
  return toExn(response)
}

export type SkuGetPricesInput = components['schemas']['QueryBatchSkuPriceRequest']
export type SkuGetPricesResponse = components['schemas']['SkuBatchPriceResponse']

export async function skuGetPrices(
  client: ReturnType<typeof newAuthenticatedClient>,
  input: SkuGetPricesInput
): Promise<ApiResponse<SkuGetPricesResponse>> {
  const response = await client.POST('/v1/sku/prices', {
    body: input,
  })
  return fromClientResponse(response)
}

export async function skuGetPricesExn(
  client: ReturnType<typeof newAuthenticatedClient>,
  input: SkuGetPricesInput
): Promise<SkuGetPricesResponse> {
  const response = await skuGetPrices(client, input)
  return toExn(response)
}

export type SkuUpdateStockLevelBySkuInput = components['schemas']['BatchUpdateStockLevelBySkuRequest']
export type SkuUpdateStockLevelBySkuResponse = components['schemas']['BatchUpdateStockLevelBySkuResponse']

export async function skuUpdateStockLevelBySku(
  client: ReturnType<typeof newAuthenticatedClient>,
  input: SkuUpdateStockLevelBySkuInput
): Promise<ApiResponse<SkuUpdateStockLevelBySkuResponse>> {
  const response = await client.PUT('/v1/sku/updatestocklevelbysku', {
    body: input,
  })
  return fromClientResponse(response)
}

export async function skuUpdateStockLevelBySkuExn(
  client: ReturnType<typeof newAuthenticatedClient>,
  input: SkuUpdateStockLevelBySkuInput
): Promise<SkuUpdateStockLevelBySkuResponse> {
  const response = await skuUpdateStockLevelBySku(client, input)
  return toExn(response)
}
