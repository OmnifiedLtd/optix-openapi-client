import { newClient } from './client'
import type { components } from './generated' // generated by openapi-typescript
import { ApiResponse, fromClientResponse, toExn } from './response'

export enum ProductType {
  Frame = 'Frame',
  Sunglasses = 'Sunglasses',
  MiscItem = 'Misc Item',
}

type ProductSearchRequest = components['schemas']['ProductSearchRequest']

export type ProductSearchInput = ProductSearchRequest & {
  productType: ProductType
}

export type ProductSearchResponse = components['schemas']['QueryProductDetailsResponseIPagedResult']

export async function searchProducts(
  client: ReturnType<typeof newClient>,
  input: ProductSearchInput
): Promise<ApiResponse<ProductSearchResponse>> {
  const response = await client.POST('/v1/product/search/{ProductType}', {
    params: {
      path: {
        ProductType: input.productType,
      },
    },
    body: input,
  })
  return fromClientResponse(response)
}

export async function searchProductsExn(
  client: ReturnType<typeof newClient>,
  input: ProductSearchInput
): Promise<ProductSearchResponse> {
  const response = await searchProducts(client, input)
  return toExn(response)
}

